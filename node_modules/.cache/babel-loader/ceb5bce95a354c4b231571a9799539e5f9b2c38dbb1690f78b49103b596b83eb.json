{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cferrebe\\\\Documents\\\\proyectos\\\\personas\\\\src\\\\components\\\\UserItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useData } from \"./hooks/useData\";\nimport { UserDetailBody } from \"./UserDetailBody\";\nimport Imagen1 from \"../assets/images/illustration-1.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserItem = _ref => {\n  _s();\n  let {\n    resultadoDatos\n  } = _ref;\n  const [isUser, setIsUser] = useState(false);\n  const {\n    user,\n    handlerPassword,\n    handlerUser\n  } = useData();\n  const [dataPerson, setDataPerson] = useState({});\n  const handlerSubmit = e => {\n    e.preventDefault();\n    //Cuando no encuentra resultados en el for dataPerson se queda con los datos vacíos\n    setDataPerson({\n      gender: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      picture: \"\",\n      phone: \"\"\n    });\n    for (let i of resultadoDatos) {\n      //Se buscan coincidencias entre username y password y el resultado de la API\n      //isUser se utiliza para renderizar a partir del primer resultado\n      if (user.name === i.login.username && user.password === i.login.password) {\n        setDataPerson({\n          gender: i.gender,\n          firstName: i.name.first,\n          lastName: i.name.last,\n          email: i.email,\n          picture: i.picture.medium\n        });\n        setIsUser(true);\n        break;\n      }\n    }\n    console.log(isUser);\n    console.log(dataPerson);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"card_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card_form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_formText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card_title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Indentif\\xEDcate para \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"ver tu perfil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card_content\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handlerSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: handlerUser,\n                required: true,\n                placeholder: \"Usuario\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                onChange: handlerPassword,\n                required: true,\n                placeholder: \"Contrase\\xF1a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              onClick: handlerSubmit,\n              id: \"btnSubmit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"reset\",\n              className: \"btn btn-primary\",\n              id: \"btnReset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_formImage\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Imagen1,\n          width: \"400\",\n          height: \"400\",\n          className: \"img-fluid\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile_wave\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 1440 320\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fill: \"hsl(240, 75%, 98%)\",\n          \"fill-opacity\": \"1\",\n          d: \"M0,192L80,176C160,160,320,128,480,106.7C640,85,800,75,960,101.3C1120,128,1280,192,1360,224L1440,256L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"class_result\",\n      children: [\n      //Si los atributos de dataPerson están definidos pero vacíos renderizamos que no se encuentran resutados\n      //En cambio si dataPerson no tiene atributos definidos y es {} se renderiza el componente vacío; esto se imprime al inicio del programa únicamente\n      dataPerson.gender === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no_results\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No se encontraron resultados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this) : \"\",\n      //Si hay datos de persona se llama al componente UserDetailBody\n      isUser && /*#__PURE__*/_jsxDEV(UserDetailBody, {\n        datos: dataPerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(UserItem, \"8s6bgSD5j6QcjG2OK35KzdKAOPg=\", false, function () {\n  return [useData];\n});\n_c = UserItem;\nexport default UserItem;\nvar _c;\n$RefreshReg$(_c, \"UserItem\");","map":{"version":3,"names":["React","useState","useData","UserDetailBody","Imagen1","UserItem","resultadoDatos","isUser","setIsUser","user","handlerPassword","handlerUser","dataPerson","setDataPerson","handlerSubmit","e","preventDefault","gender","firstName","lastName","email","picture","phone","i","name","login","username","password","first","last","medium","console","log"],"sources":["C:/Users/cferrebe/Documents/proyectos/personas/src/components/UserItem.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useData } from \"./hooks/useData\";\r\nimport { UserDetailBody } from \"./UserDetailBody\";\r\nimport Imagen1 from \"../assets/images/illustration-1.svg\";\r\n\r\nconst UserItem = ({ resultadoDatos }) => {\r\n  const [isUser, setIsUser] = useState(false);\r\n  const { user, handlerPassword, handlerUser } = useData();\r\n  const [dataPerson, setDataPerson] = useState({});\r\n\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n    //Cuando no encuentra resultados en el for dataPerson se queda con los datos vacíos\r\n    setDataPerson({\r\n      gender: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      picture: \"\",\r\n      phone:\"\"\r\n    });\r\n\r\n    for (let i of resultadoDatos) {\r\n      //Se buscan coincidencias entre username y password y el resultado de la API\r\n      //isUser se utiliza para renderizar a partir del primer resultado\r\n      if (\r\n        user.name === i.login.username &&\r\n        user.password === i.login.password\r\n      ) {\r\n        setDataPerson({\r\n          gender: i.gender,\r\n          firstName: i.name.first,\r\n          lastName: i.name.last,\r\n          email: i.email,\r\n          picture: i.picture.medium,\r\n        });\r\n        setIsUser(true);\r\n        break;\r\n      }\r\n    }\r\n\r\n    console.log(isUser);\r\n    console.log(dataPerson);\r\n  };\r\n\r\n  return (\r\n    <section className=\"card_container\">\r\n      <div className=\"card_form\">\r\n        <div className=\"card_formText\">\r\n          <div className=\"card_title\">\r\n            <h1>Indentifícate para </h1>\r\n            <h1>ver tu perfil</h1>\r\n          </div>\r\n          <div className=\"card_content\">\r\n            <form onSubmit={handlerSubmit}>\r\n              <p>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={handlerUser}\r\n                  required\r\n                  placeholder=\"Usuario\"\r\n                ></input>\r\n              </p>\r\n              <p>\r\n                <input\r\n                  type=\"password\"\r\n                  onChange={handlerPassword}\r\n                  required\r\n                  placeholder=\"Contraseña\"\r\n                ></input>\r\n              </p>\r\n\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                onClick={handlerSubmit}\r\n                id=\"btnSubmit\"\r\n              />\r\n              <input type=\"reset\" className=\"btn btn-primary\" id=\"btnReset\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"card_formImage\">\r\n          <img\r\n            src={Imagen1}\r\n            width=\"400\"\r\n            height=\"400\"\r\n            className=\"img-fluid\"\r\n            alt=\"\"\r\n          ></img>\r\n        </div>\r\n      </div>\r\n      <div className=\"profile_wave\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n            <path fill=\"hsl(240, 75%, 98%)\" fill-opacity=\"1\" d=\"M0,192L80,176C160,160,320,128,480,106.7C640,85,800,75,960,101.3C1120,128,1280,192,1360,224L1440,256L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\"></path>\r\n        </svg>\r\n      </div>\r\n      <div className=\"class_result\">\r\n        {\r\n          //Si los atributos de dataPerson están definidos pero vacíos renderizamos que no se encuentran resutados\r\n          //En cambio si dataPerson no tiene atributos definidos y es {} se renderiza el componente vacío; esto se imprime al inicio del programa únicamente\r\n          dataPerson.gender === \"\" ? (\r\n            <div className=\"no_results\"><h2>No se encontraron resultados</h2></div>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        {\r\n          //Si hay datos de persona se llama al componente UserDetailBody\r\n          isUser && <UserDetailBody datos={dataPerson}></UserDetailBody>\r\n        }\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default UserItem;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,OAAO,MAAM,qCAAqC;AAAC;AAE1D,MAAMC,QAAQ,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM;IAAEQ,IAAI;IAAEC,eAAe;IAAEC;EAAY,CAAC,GAAGT,OAAO,EAAE;EACxD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhD,MAAMa,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClB;IACAH,aAAa,CAAC;MACZI,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAC;IACR,CAAC,CAAC;IAEF,KAAK,IAAIC,CAAC,IAAIjB,cAAc,EAAE;MAC5B;MACA;MACA,IACEG,IAAI,CAACe,IAAI,KAAKD,CAAC,CAACE,KAAK,CAACC,QAAQ,IAC9BjB,IAAI,CAACkB,QAAQ,KAAKJ,CAAC,CAACE,KAAK,CAACE,QAAQ,EAClC;QACAd,aAAa,CAAC;UACZI,MAAM,EAAEM,CAAC,CAACN,MAAM;UAChBC,SAAS,EAAEK,CAAC,CAACC,IAAI,CAACI,KAAK;UACvBT,QAAQ,EAAEI,CAAC,CAACC,IAAI,CAACK,IAAI;UACrBT,KAAK,EAAEG,CAAC,CAACH,KAAK;UACdC,OAAO,EAAEE,CAAC,CAACF,OAAO,CAACS;QACrB,CAAC,CAAC;QACFtB,SAAS,CAAC,IAAI,CAAC;QACf;MACF;IACF;IAEAuB,OAAO,CAACC,GAAG,CAACzB,MAAM,CAAC;IACnBwB,OAAO,CAACC,GAAG,CAACpB,UAAU,CAAC;EACzB,CAAC;EAED,oBACE;IAAS,SAAS,EAAC,gBAAgB;IAAA,wBACjC;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC5B;UAAK,SAAS,EAAC,YAAY;UAAA,wBACzB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA4B,eAC5B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAsB;QAAA;UAAA;UAAA;UAAA;QAAA,QAClB,eACN;UAAK,SAAS,EAAC,cAAc;UAAA,uBAC3B;YAAM,QAAQ,EAAEE,aAAc;YAAA,wBAC5B;cAAA,uBACE;gBACE,IAAI,EAAC,MAAM;gBACX,QAAQ,EAAEH,WAAY;gBACtB,QAAQ;gBACR,WAAW,EAAC;cAAS;gBAAA;gBAAA;gBAAA;cAAA;YACd;cAAA;cAAA;cAAA;YAAA,QACP,eACJ;cAAA,uBACE;gBACE,IAAI,EAAC,UAAU;gBACf,QAAQ,EAAED,eAAgB;gBAC1B,QAAQ;gBACR,WAAW,EAAC;cAAY;gBAAA;gBAAA;gBAAA;cAAA;YACjB;cAAA;cAAA;cAAA;YAAA,QACP,eAEJ;cACE,IAAI,EAAC,QAAQ;cACb,SAAS,EAAC,iBAAiB;cAC3B,OAAO,EAAEI,aAAc;cACvB,EAAE,EAAC;YAAW;cAAA;cAAA;cAAA;YAAA,QACd,eACF;cAAO,IAAI,EAAC,OAAO;cAAC,SAAS,EAAC,iBAAiB;cAAC,EAAE,EAAC;YAAU;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA;QAC3D;UAAA;UAAA;UAAA;QAAA,QACH;MAAA;QAAA;QAAA;QAAA;MAAA,QACF,eACN;QAAK,SAAS,EAAC,gBAAgB;QAAA,uBAC7B;UACE,GAAG,EAAEV,OAAQ;UACb,KAAK,EAAC,KAAK;UACX,MAAM,EAAC,KAAK;UACZ,SAAS,EAAC,WAAW;UACrB,GAAG,EAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MACD;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAK,KAAK,EAAC,4BAA4B;QAAC,OAAO,EAAC,cAAc;QAAA,uBAC1D;UAAM,IAAI,EAAC,oBAAoB;UAAC,gBAAa,GAAG;UAAC,CAAC,EAAC;QAAuM;UAAA;UAAA;UAAA;QAAA;MAAQ;QAAA;QAAA;QAAA;MAAA;IAChQ;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,cAAc;MAAA;MAEzB;MACA;MACAQ,UAAU,CAACK,MAAM,KAAK,EAAE,gBACtB;QAAK,SAAS,EAAC,YAAY;QAAA,uBAAC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAqC;QAAA;QAAA;QAAA;MAAA,QAAM,GAEvE,EACD;MAGD;MACAV,MAAM,iBAAI,QAAC,cAAc;QAAC,KAAK,EAAEK;MAAW;QAAA;QAAA;QAAA;MAAA,QAAkB;IAAA;MAAA;MAAA;MAAA;IAAA,QAE5D;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEd,CAAC;AAAC,GA7GIP,QAAQ;EAAA,QAEmCH,OAAO;AAAA;AAAA,KAFlDG,QAAQ;AA8Gd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}