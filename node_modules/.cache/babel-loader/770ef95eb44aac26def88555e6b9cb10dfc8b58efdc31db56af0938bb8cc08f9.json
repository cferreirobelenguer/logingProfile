{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cferrebe\\\\Documents\\\\proyectos\\\\personas\\\\src\\\\components\\\\UserItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useData } from './hooks/useData';\nimport { UserDetailBody } from './UserDetailBody';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserItem = _ref => {\n  _s();\n  let {\n    resultadoDatos\n  } = _ref;\n  const {\n    user,\n    handlerPassword,\n    handlerUser\n  } = useData();\n  const [dataPerson, setDataPerson] = useState({\n    gender: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    picture: \"\"\n  });\n  const [isUser, setIsUser] = useState(false);\n  const [noUser, setNoUser] = useState(false);\n  const handlerSubmit = e => {\n    e.preventDefault();\n    resultadoDatos.map(i => {\n      //Se buscan coincidencias entre username y password y el resultado de la API\n      //Si isUser es true es que hay resultados encontrados y si es false no se han encontrado resultados\n      if (user.name === i.login.username && user.password === i.login.password) {\n        setDataPerson({\n          gender: i.gender,\n          firstName: i.name.first,\n          lastName: i.name.last,\n          email: i.email,\n          picture: i.picture.medium\n        });\n        setIsUser(true);\n      }\n      isUser === false ? setNoUser(true) : setNoUser(false);\n    });\n    console.log(dataPerson);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlerSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Usuario\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handlerUser,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Contrase\\xF1a\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          onChange: handlerPassword,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: handlerSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), noUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No se encontraron resultados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this) :\n    //Si hay datos de persona se llama al componente UserDetailBody, en caso contrario no se imprime nada\n    isUser ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(UserDetailBody, {\n        datos: dataPerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n};\n_s(UserItem, \"668Z1hMffwWPG5DujcyYqieOV0o=\", false, function () {\n  return [useData];\n});\n_c = UserItem;\nexport default UserItem;\nvar _c;\n$RefreshReg$(_c, \"UserItem\");","map":{"version":3,"names":["React","useState","useData","UserDetailBody","UserItem","resultadoDatos","user","handlerPassword","handlerUser","dataPerson","setDataPerson","gender","firstName","lastName","email","picture","isUser","setIsUser","noUser","setNoUser","handlerSubmit","e","preventDefault","map","i","name","login","username","password","first","last","medium","console","log"],"sources":["C:/Users/cferrebe/Documents/proyectos/personas/src/components/UserItem.jsx"],"sourcesContent":["import React,{useState} from 'react'\r\nimport { useData } from './hooks/useData'\r\nimport {UserDetailBody} from './UserDetailBody'\r\n\r\n\r\nconst UserItem=({resultadoDatos})=>{\r\n    \r\n    const {user,handlerPassword,handlerUser}=useData()\r\n    const [dataPerson,setDataPerson]=useState({\r\n        gender:\"\",\r\n        firstName:\"\",\r\n        lastName:\"\",\r\n        email:\"\",\r\n        picture:\"\"\r\n    })\r\n    const [isUser,setIsUser]=useState(false)\r\n    const [noUser,setNoUser]=useState(false)\r\n    const handlerSubmit=(e)=>{\r\n        e.preventDefault()\r\n        \r\n        resultadoDatos.map((i)=>{\r\n            //Se buscan coincidencias entre username y password y el resultado de la API\r\n            //Si isUser es true es que hay resultados encontrados y si es false no se han encontrado resultados\r\n            if((user.name===i.login.username)&&(user.password===i.login.password)){\r\n                \r\n                setDataPerson({\r\n                    gender:i.gender,\r\n                    firstName:i.name.first,\r\n                    lastName: i.name.last,\r\n                    email:i.email,\r\n                    picture:i.picture.medium\r\n                })\r\n                setIsUser(true)\r\n                \r\n            }\r\n            isUser===false?setNoUser(true):setNoUser(false)\r\n        })\r\n        console.log(dataPerson)\r\n    }\r\n\r\n    return(\r\n            <div>\r\n                <form onSubmit={handlerSubmit}>\r\n                    <p>\r\n                        <label htmlFor='username'>\r\n                            Usuario&nbsp;\r\n                        </label>\r\n                        <input\r\n                        type=\"text\"\r\n                        onChange={handlerUser}\r\n                        required\r\n                        ></input>\r\n                    \r\n                    </p>\r\n                    <p>\r\n                        <label htmlFor='password'>\r\n                            Contrase√±a&nbsp;\r\n                        </label>\r\n                        <input\r\n                        type=\"password\"\r\n                        onChange={handlerPassword}\r\n                        required\r\n                        ></input>\r\n                    </p>\r\n\r\n                    <input type=\"submit\" onClick={handlerSubmit} />\r\n                    <input type=\"reset\"/>\r\n                </form>\r\n                {noUser?(\r\n                    <div>No se encontraron resultados</div>\r\n                ):(\r\n                    //Si hay datos de persona se llama al componente UserDetailBody, en caso contrario no se imprime nada\r\n                isUser?(\r\n                    <section>\r\n                        <UserDetailBody datos={dataPerson}></UserDetailBody>\r\n                    </section>\r\n                ):\"\"\r\n                )}\r\n                \r\n            </div>\r\n        \r\n    )\r\n}\r\nexport default UserItem"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}