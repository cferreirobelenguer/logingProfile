{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cferrebe\\\\Documents\\\\proyectos\\\\personas\\\\src\\\\components\\\\UserItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useData } from \"./hooks/useData\";\nimport { UserDetailBody } from \"./UserDetailBody\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserItem = _ref => {\n  _s();\n  let {\n    resultadoDatos\n  } = _ref;\n  const [isUser, setIsUser] = useState(false);\n  const {\n    user,\n    handlerPassword,\n    handlerUser\n  } = useData();\n  const [dataPerson, setDataPerson] = useState({});\n  const handlerSubmit = e => {\n    e.preventDefault();\n    //Cuando no encuentra resultados en el for dataPerson se queda con los datos vacíos\n    setDataPerson({\n      gender: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      picture: \"\"\n    });\n    for (let i of resultadoDatos) {\n      //Se buscan coincidencias entre username y password y el resultado de la API\n      //isUser se utiliza para renderizar a partir del primer resultado\n      if (user.name === i.login.username && user.password === i.login.password) {\n        setDataPerson({\n          gender: i.gender,\n          firstName: i.name.first,\n          lastName: i.name.last,\n          email: i.email,\n          picture: i.picture.medium\n        });\n        setIsUser(true);\n        break;\n      }\n    }\n    console.log(isUser);\n    console.log(dataPerson);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"card_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card_form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlerSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Usuario\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: handlerUser,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Contrase\\xF1a\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: handlerPassword,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          onClick: handlerSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this),\n    //Si los atributos de dataPerson están definidos pero vacíos renderizamos que no se encuentran resutados\n    //En cambio si dataPerson no tiene atributos definidos y es {} se renderiza el componente vacío; esto se imprime al inicio del programa únicamente\n    dataPerson.gender === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No se encontraron resultados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 36\n    }, this) : \"\",\n    //Si hay datos de persona se llama al componente UserDetailBody\n    isUser && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(UserDetailBody, {\n        datos: dataPerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(UserItem, \"8s6bgSD5j6QcjG2OK35KzdKAOPg=\", false, function () {\n  return [useData];\n});\n_c = UserItem;\nexport default UserItem;\nvar _c;\n$RefreshReg$(_c, \"UserItem\");","map":{"version":3,"names":["React","useState","useData","UserDetailBody","UserItem","resultadoDatos","isUser","setIsUser","user","handlerPassword","handlerUser","dataPerson","setDataPerson","handlerSubmit","e","preventDefault","gender","firstName","lastName","email","picture","i","name","login","username","password","first","last","medium","console","log"],"sources":["C:/Users/cferrebe/Documents/proyectos/personas/src/components/UserItem.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useData } from \"./hooks/useData\";\r\nimport { UserDetailBody } from \"./UserDetailBody\";\r\n\r\nconst UserItem = ({ resultadoDatos }) => {\r\n  const [isUser, setIsUser] = useState(false);\r\n  const { user, handlerPassword, handlerUser } = useData();\r\n  const [dataPerson, setDataPerson] = useState({});\r\n\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n    //Cuando no encuentra resultados en el for dataPerson se queda con los datos vacíos\r\n    setDataPerson({\r\n      gender: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      picture: \"\",\r\n    });\r\n\r\n    for (let i of resultadoDatos) {\r\n      //Se buscan coincidencias entre username y password y el resultado de la API\r\n      //isUser se utiliza para renderizar a partir del primer resultado\r\n      if (\r\n        user.name === i.login.username &&\r\n        user.password === i.login.password\r\n      ) {\r\n        setDataPerson({\r\n          gender: i.gender,\r\n          firstName: i.name.first,\r\n          lastName: i.name.last,\r\n          email: i.email,\r\n          picture: i.picture.medium,\r\n        });\r\n        setIsUser(true);\r\n        break;\r\n      }\r\n    }\r\n\r\n    console.log(isUser);\r\n    console.log(dataPerson);\r\n  };\r\n\r\n  return (\r\n    <section className=\"card_container\">\r\n      <div className=\"card_form\">\r\n        <form onSubmit={handlerSubmit}>\r\n          <p>\r\n            <label htmlFor=\"username\">Usuario&nbsp;</label>\r\n            <input type=\"text\" onChange={handlerUser} required></input>\r\n          </p>\r\n          <p>\r\n            <label htmlFor=\"password\">Contraseña&nbsp;</label>\r\n            <input type=\"password\" onChange={handlerPassword} required></input>\r\n          </p>\r\n\r\n          <input type=\"submit\" onClick={handlerSubmit} />\r\n          <input type=\"reset\" />\r\n        </form>\r\n      </div>\r\n      {\r\n        //Si los atributos de dataPerson están definidos pero vacíos renderizamos que no se encuentran resutados\r\n        //En cambio si dataPerson no tiene atributos definidos y es {} se renderiza el componente vacío; esto se imprime al inicio del programa únicamente\r\n        dataPerson.gender === \"\" ? <div>No se encontraron resultados</div> : \"\"\r\n      }\r\n      {\r\n        //Si hay datos de persona se llama al componente UserDetailBody\r\n        isUser && (\r\n          <section>\r\n            <UserDetailBody datos={dataPerson}></UserDetailBody>\r\n          </section>\r\n        )\r\n      }\r\n    </section>\r\n  );\r\n};\r\nexport default UserItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}